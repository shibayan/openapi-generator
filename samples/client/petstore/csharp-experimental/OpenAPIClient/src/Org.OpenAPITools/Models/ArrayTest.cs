/* 
 * OpenAPI Petstore
 *
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;

namespace Org.OpenAPITools.Models
{
    /// <summary>
    /// ArrayTest
    /// </summary>
    public partial class ArrayTest : IEquatable<ArrayTest>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ArrayTest" /> class.
        /// </summary>
        /// <param name="arrayOfString">arrayOfString.</param>
        /// <param name="arrayArrayOfInteger">arrayArrayOfInteger.</param>
        /// <param name="arrayArrayOfModel">arrayArrayOfModel.</param>
        public ArrayTest(IReadOnlyList<string>? arrayOfString = default, IReadOnlyList<IReadOnlyList<long>>? arrayArrayOfInteger = default, IReadOnlyList<IReadOnlyList<ReadOnlyFirst>>? arrayArrayOfModel = default)
        {
            ArrayOfString = arrayOfString;
            ArrayArrayOfInteger = arrayArrayOfInteger;
            ArrayArrayOfModel = arrayArrayOfModel;
        }

        /// <summary>
        /// Gets or Sets ArrayOfString
        /// </summary>
        [JsonProperty("array_of_string", NullValueHandling = NullValueHandling.Ignore)]
        public IReadOnlyList<string>? ArrayOfString { get; set; }

        /// <summary>
        /// Gets or Sets ArrayArrayOfInteger
        /// </summary>
        [JsonProperty("array_array_of_integer", NullValueHandling = NullValueHandling.Ignore)]
        public IReadOnlyList<IReadOnlyList<long>>? ArrayArrayOfInteger { get; set; }

        /// <summary>
        /// Gets or Sets ArrayArrayOfModel
        /// </summary>
        [JsonProperty("array_array_of_model", NullValueHandling = NullValueHandling.Ignore)]
        public IReadOnlyList<IReadOnlyList<ReadOnlyFirst>>? ArrayArrayOfModel { get; set; }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object? obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            if (obj.GetType() != GetType()) return false;
            return Equals((ArrayTest)obj);
        }

        /// <summary>
        /// Returns true if ArrayTest instances are equal
        /// </summary>
        /// <param name="other">Instance of ArrayTest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ArrayTest? other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;
            return 
                Equals(ArrayOfString, other.ArrayOfString) &&
                Equals(ArrayArrayOfInteger, other.ArrayArrayOfInteger) &&
                Equals(ArrayArrayOfModel, other.ArrayArrayOfModel);
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            var hashCode = new HashCode();
            hashCode.Add(ArrayOfString);
            hashCode.Add(ArrayArrayOfInteger);
            hashCode.Add(ArrayArrayOfModel);
            return hashCode.ToHashCode();
        }
    }
}
