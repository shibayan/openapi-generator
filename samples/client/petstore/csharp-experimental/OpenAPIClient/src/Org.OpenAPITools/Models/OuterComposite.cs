/*
 * OpenAPI Petstore
 *
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;

using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace Org.OpenAPITools.Models
{
    /// <summary>
    /// OuterComposite
    /// </summary>
    public partial class OuterComposite : IEquatable<OuterComposite>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OuterComposite" /> class.
        /// </summary>
        /// <param name="myNumber">myNumber.</param>
        /// <param name="myString">myString.</param>
        /// <param name="myBoolean">myBoolean.</param>
        public OuterComposite(decimal? myNumber = default, string? myString = default, bool? myBoolean = default)
        {
            MyNumber = myNumber;
            MyString = myString;
            MyBoolean = myBoolean;
        }

        /// <summary>
        /// Gets or Sets MyNumber
        /// </summary>
        [JsonProperty("my_number", NullValueHandling = NullValueHandling.Ignore)]
        public decimal? MyNumber { get; set; }

        /// <summary>
        /// Gets or Sets MyString
        /// </summary>
        [JsonProperty("my_string", NullValueHandling = NullValueHandling.Ignore)]
        public string? MyString { get; set; }

        /// <summary>
        /// Gets or Sets MyBoolean
        /// </summary>
        [JsonProperty("my_boolean", NullValueHandling = NullValueHandling.Ignore)]
        public bool? MyBoolean { get; set; }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object? obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            if (obj.GetType() != GetType()) return false;
            return Equals((OuterComposite)obj);
        }

        /// <summary>
        /// Returns true if OuterComposite instances are equal
        /// </summary>
        /// <param name="other">Instance of OuterComposite to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(OuterComposite? other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;
            return 
                MyNumber == other.MyNumber &&
                MyString == other.MyString &&
                MyBoolean == other.MyBoolean;
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            var hashCode = new HashCode();
            hashCode.Add(MyNumber);
            hashCode.Add(MyString);
            hashCode.Add(MyBoolean);
            return hashCode.ToHashCode();
        }
    }
}
